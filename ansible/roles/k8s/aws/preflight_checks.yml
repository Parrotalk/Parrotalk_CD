# 1. EC2 태그 체크
- name: Check EC2 cluster tags for ptk-dev-k8s instances
  command: >
    aws ec2 describe-instances
    --filters 
    "Name=tag:Name,Values=ptk-dev-k8s*"
    "Name=instance-state-name,Values=running"
    --query 'Reservations[*].Instances[*].[InstanceId,Tags[?Key==`kubernetes.io/cluster/{{ cluster_name }}`].Value]'
    --output text
  register: ec2_cluster_tags
  ignore_errors: yes

- name: Get EC2 instances without required tags
  command: >
    aws ec2 describe-instances
    --filters 
    "Name=tag:Name,Values=ptk-dev-k8s*"
    "Name=instance-state-name,Values=running"
    --query 'Reservations[*].Instances[?!contains(Tags[*].Key, `kubernetes.io/cluster/{{ cluster_name }}`)].[InstanceId,Tags[?Key==`Name`].Value]'
    --output text
  register: untagged_instances
  ignore_errors: yes

# 2. 서브넷 태그 체크
- name: Check public subnet tags for ptk-dev-k8s subnets
  command: >
    aws ec2 describe-subnets
    --filters 
    "Name=vpc-id,Values={{ vpc_id }}"
    "Name=tag:Name,Values=ptk-dev-k8s*"
    "Name=tag:kubernetes.io/role/elb,Values=1"
    --query 'Subnets[*].SubnetId'
  register: ptk_public_subnet_check
  ignore_errors: yes

- name: Check private subnet tags for ptk-dev-k8s subnets
  command: >
    aws ec2 describe-subnets
    --filters 
    "Name=vpc-id,Values={{ vpc_id }}"
    "Name=tag:Name,Values=ptk-dev-k8s*"
    "Name=tag:kubernetes.io/role/internal-elb,Values=1"
    --query 'Subnets[*].SubnetId'
  register: ptk_private_subnet_check
  ignore_errors: yes

# 3. 마스터노드 IAM 정책 체크
- name: Get master node instance ID and role
  command: >
    aws ec2 describe-instances
    --filters 
    "Name=tag:Name,Values=ptk-dev-k8s-master*"
    "Name=instance-state-name,Values=running"
    --query 'Reservations[*].Instances[*].[InstanceId,IamInstanceProfile.Arn]'
    --output text
  register: master_instance_info

# 4. 결과 출력 및 실패 조건 체크
- name: Display check results
  debug:
    msg: |
      Check results:
      - EC2 instances with cluster tags: {{ ec2_cluster_tags.stdout_lines }}
      - Untagged instances: {{ untagged_instances.stdout_lines }}
      - Public subnets: {{ ptk_public_subnet_check.stdout }}
      - Private subnets: {{ ptk_private_subnet_check.stdout }}
      - Master node IAM role: {{ master_instance_info.stdout if master_instance_info.rc == 0 else 'Not found' }}

- name: Fail if any requirements are not met
  fail:
    msg: |
      Missing required configurations:
      {% if untagged_instances.stdout != "" %}
      - EC2 instances missing tags: {{ untagged_instances.stdout_lines }}
      {% endif %}
      {% if ptk_public_subnet_check.rc != 0 or ptk_private_subnet_check.rc != 0 %}
      - Missing subnet tags (either public or private)
      {% endif %}
      {% if master_instance_info.rc != 0 or master_instance_info.stdout == "" %}
      - Missing required IAM role on master node
      {% endif %}
      {% if master_policies is defined and master_policies.rc == 0 and 'AWSLoadBalancerControllerIAMPolicy' not in master_policies.stdout %}
      - Missing required IAM policies on master node
      {% endif %}
  when: >
    untagged_instances.stdout != "" or
    ptk_public_subnet_check.rc != 0 or
    ptk_private_subnet_check.rc != 0 or
    master_instance_info.rc != 0 or master_instance_info.stdout == "" or
    (master_policies is defined and master_policies.rc == 0 and 'AWSLoadBalancerControllerIAMPolicy' not in master_policies.stdout)
