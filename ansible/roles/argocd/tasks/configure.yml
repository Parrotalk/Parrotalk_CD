
- name: Ensure .ssh directory exists
  file:
    path: "{{ ssh_key_path }}"
    state: directory
    mode: '0700'

- name: Check if SSH key already exists
  stat:
    path: "{{ ssh_key_path }}/{{ ssh_key_name }}"
  register: ssh_key

- name: Generate SSH key
  command: >
    ssh-keygen -t ed25519 
    -C "{{ ssh_key_comment }}"
    -f "{{ ssh_key_path }}/{{ ssh_key_name }}"
    -N ""
  when: not ssh_key.stat.exists

- name: Get SSH public key content
  command: "cat {{ ssh_key_path }}/{{ ssh_key_name }}.pub"
  register: public_key_content
  changed_when: false

- name: Display public key to add to GitHub
  debug:
    msg: "Add this public key to GitHub: {{ public_key_content.stdout }}"

- name: Add GitHub to known_hosts
  known_hosts:
    name: "github.com"
    key: "{{ lookup('pipe', 'ssh-keyscan -t ed25519 github.com') }}"
    state: present

- name: Wait for SSH key to be added to GitHub
  pause:
    prompt: "Please add the displayed public key to GitHub and press ENTER to continue"

- name: Test GitHub SSH connection
  command: ssh -T git@github.com
  register: ssh_test
  ignore_errors: yes
  changed_when: false

- name: Create ArgoCD repository secret
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: repo-ssh-key
        namespace: "{{ argocd_namespace }}"
      type: Opaque
      data:
        sshPrivateKey: "{{ lookup('file', ssh_key_path + '/' + ssh_key_name) | b64encode }}"

- name: Add repository to ArgoCD
  command: >
    argocd repo add {{ github_repo }}
    --ssh-private-key-path {{ ssh_key_path }}/{{ ssh_key_name }}
  register: repo_add
  changed_when: "'repository added' in repo_add.stdout"
  failed_when:
    - repo_add.rc != 0
    - "'repository already exists' not in repo_add.stderr"

- name: Verify ArgoCD repository list
  command: argocd repo list
  register: repo_list
  changed_when: false

- name: Display repository status
  debug:
    msg: "{{ repo_list.stdout_lines }}"