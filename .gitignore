.DS_Store

# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# --- Ansible-specific ignores ---
# Ignore Ansible retry files
*.retry

# Ignore Ansible roles directory (if roles are installed via galaxy)
roles/*

# Ignore sensitive variable files
vars/*.yml
group_vars/*.yml
host_vars/*.yml

# Ignore Ansible facts cache
.fact_cache/

# Ignore temporary inventory files
inventory/*_inventory

# Ignore SSH key files
*.pem
*.key

# Ignore vault password files
.vault_pass

# Ignore Ansible collections cache
~/.ansible/collections/*

ansible.log

# --- VSCode-specific ignores ---
# Ignore VSCode settings and workspace specific files
.vscode/
.vscode/settings.json
.vscode/tasks.json
.vscode/launch.json
.vscode/extensions.json

# Ignore user settings for VSCode
.code-workspace
